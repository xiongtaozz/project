1.匿名函数的使用 ---Python特殊语法 (*)
2.列表表达式
3.设计模式--->工厂模式

python 优势:
PHP  java  敏捷性开发
为什么要用匿名函数?：lambda 表达式
程序猿: 初级 中高级->
1. 程序一次行使用，所以不需要定义函数名，节省内存中变量定义空间
2. 如果想让程序更加简洁时。
函数的应用:
1. 代码块重复，这时候必须考虑用到函数，降低程序的冗余度
2. 代码块复杂，这时候可以考虑用到函数，降低程序的可读性

函数的用法：
在python中，有两种函数，1，def定义，2,是lambda表达式
1, def func(x,y):return x+y
2, lambda x,y:x+y

三目运算 (x==0)?True:False


在编程语言中,C/C++/Java属于过程式编程,匿名函数一般用于函数式编程

列：
L1=[1,2,3,4,5]
L2=[]
for i in L1:
    if i>3:
        L2.append(i)

而函数式编程的实现：filter，给其片段条件既可

def func(x):return x>3 
filter(func,[1,2,3,4,5])

或

filter(lambda x:x>3,[1,2,3,4,5])

总结: 从中可以看出，lambda一般应用于函数式编程，代码简洁，常和map,reduce,filter等函数结合使用。

匿名函数几个规则:
1. 一般也就一行表达式，必须有返回值
2. lambda 不能有return
3. 可以没有参数，可以有一个或多个参数
lambda x,y,z: True

python 特殊语法： filter/map/reduce/lambda

1.filter(function, sequence)：对sequence中的item依次执行function(item)，
将执行结果item组成一个List/String/Tuple（取决于sequence的类型）---逐一判断过滤 

2.map(function, sequence) ：对sequence中的item依次执行function(item)，见执行结果组成一个List返回 ---逐个传递给function
map(lambda x:x+x,list1)

3.reduce(function, sequence, starting_value)：对sequence中的item顺序迭代调用function，如果有starting_value， 1+100 +20 =5070
还可以作为初始值调用 ---function接收的参数个数只能为2先把sequence中第一个值和第二个值当参数传给function，
再把function的返回值和第三个值当参数传给function，然后只返回一个结果1 + 2 +3..+100

注：
lambda表达式返回一个函数对象例子：func = lambda x,y:x+y func相当于下面这个函数def func(x,y):return x+y
注意def是语句而lambda是表达式下面这种情况下就只能用lambda而不能用def[(lambda x:x*x)(x) for x in range(1,11)]map，reduce，filter
中的function都可以用lambda表达式来生成！map(function,sequence)把sequence中的值当参数逐个传给function，返回一个包含函数执行结果的list。
如果function有两个参数，即map(function,sequence1,sequence2)。例子：求1*1,2*2,3*3,4*4map(lambda x:x*x,range(1,5))
返回值是[1,4,9,16]reduce(function,sequence)function接收的参数个数只能为2先把sequence中第一个值和第二个值当参数传给function，
再把function的返回值和第三个值当参数传给function，然后只返回一个结果。例子：求1到10的累加reduce(lambda x,y:x+y,range(1,11))返回值是55。
filter(function,sequence)function的返回值只能是True或False把sequence中的值逐个当参数传给function，如果function(x)的返回值是True，
就把x加到filter的返回值里面。一般来说filter的返回值是list，特殊情况如sequence是string或tuple，则返回值按照sequence的类型。
例子：找出1到10之间的奇数filter(lambda x:x%2!=0,range(1,11))返回值[1,3,5,7,9]如果sequence是一个stringfilter(lambda x:len(x)!=0,'hello')
返回'hello'filter(lambda x:len(x)==0,'hello')返回''

无参匿名函数:
lambda ：True
有参匿名函数
lambda x,y: x + y
